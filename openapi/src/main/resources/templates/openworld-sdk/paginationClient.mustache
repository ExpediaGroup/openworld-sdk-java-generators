{{>licenseInfo}}
package {{apiPackage}}

{{#operations}}
    {{#operation}}
        {{#vendorExtensions}}
            {{#x-sdk-paginated}}
                {{#returnType}}
import {{packageName}}.models.{{returnBaseType}}
                {{/returnType}}
            {{/x-sdk-paginated}}
        {{/vendorExtensions}}
    {{/operation}}
{{/operations}}
import io.ktor.client.call.body
import java.util.UUID

{{#operations}}
class PaginationClient internal constructor(private val client: {{classname}}) {
{{#operation}}
    {{#vendorExtensions}}
        {{#x-sdk-paginated}}
            {{#returnType}}
            @JvmOverloads
            fun {{operationId}}({{>apiParamsDecleration}}): ResponsePaginator<{{{returnType}}}> {
                val response = client.{{operationId}}WithResponse({{>apiParamsPassed}})
                return ResponsePaginator(client, response) { it.body<{{{returnType}}}>() }
            }
            {{/returnType}}
        {{/x-sdk-paginated}}
    {{/vendorExtensions}}
{{/operation}}
}
{{/operations}}